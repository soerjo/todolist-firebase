{"version":3,"sources":["components/main-page/List.js","firebase.js","components/main-page/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Listing","todo","handlleDelete","handlleEdit","useState","input","setInput","index","setIndex","open","setOpen","body","style","position","top","left","width","backgroundColor","border","padding","transform","id","className","TextField","label","placeholder","value","onChange","e","target","Button","disabled","type","onClick","variant","color","margin","Modal","onClose","ListItem","button","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","console","log","edge","aria-label","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Todo","todos","setTodos","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","preventDefault","set","timestamp","FieldValue","serverTimestamp","merge","delete","marginTop","add","List","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ddb843b.chunk.js","sourcesContent":["import {\n  ListItemSecondaryAction,\n  Modal,\n  ListItem,\n  ListItemText,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { React, useState } from \"react\";\n\nfunction Listing({ todo, handlleDelete, handlleEdit }) {\n  const [input, setInput] = useState(\"\");\n  const [index, setIndex] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (id) => {\n    setIndex(id);\n    console.log(id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const body = (\n    <div\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        width: 400,\n        backgroundColor: \"#fafafa\",\n        border: \"2px solid #000\",\n        padding: \"1rem\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\n      <form className=\"form-input\">\n        <TextField\n          id=\"todoinput\"\n          label=\"Todo\"\n          style={{ width: \"50%\" }}\n          placeholder=\"Todo List ...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <Button\n          disabled={!input}\n          type=\"submit\"\n          onClick={(e) => {\n            handlleEdit(e, input, index);\n            setOpen(false);\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          style={{ margin: \"1rem\" }}\n        >\n          Add Todo\n        </Button>\n      </form>\n    </div>\n  );\n\n  return (\n    <>\n      <Modal open={open} onClose={handleClose}>\n        {body}\n      </Modal>\n\n      <ListItem button>\n        <ListItemText primary={todo.todo} secondary={todo.id} />\n        <ListItemSecondaryAction>\n          <IconButton\n            onClick={() => handleOpen(todo.id)}\n            edge=\"end\"\n            aria-label=\"delete\"\n          >\n            <EditIcon />\n          </IconButton>{\" \"}\n          <IconButton\n            onClick={() => handlleDelete(todo.id)}\n            edge=\"end\"\n            aria-label=\"delete\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </>\n  );\n}\n\nexport default Listing;\n","import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBCtnP9zDW14dw1Z1N_ZIJf-TV1XZxYWQc\",\n  authDomain: \"todo-app-16423.firebaseapp.com\",\n  projectId: \"todo-app-16423\",\n  storageBucket: \"todo-app-16423.appspot.com\",\n  messagingSenderId: \"331041206153\",\n  appId: \"1:331041206153:web:3fd5cb79bcfdcaeda7fb58\",\n});\n\nconst db = firebaseApp.firestore();\n\nexport default db;\n","import { React, useState, useEffect } from \"react\";\nimport \"./todo.css\";\nimport { Button, List, TextField } from \"@material-ui/core\";\nimport Listing from \"./List\";\nimport db from \"../../firebase\";\nimport firebase from \"firebase\";\n\nfunction Todo() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n  // console.log(\"isi todos:\", todos);\n  console.log(\"isi inputs:\", input);\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setTodos(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            todo: doc.data().todo,\n          }))\n        );\n      });\n  }, []);\n\n  const inputData = (e) => {\n    e.preventDefault();\n    if (input) {\n      db.collection(\"todos\").add({\n        todo: input,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      });\n    }\n    setInput(\"\");\n  };\n  const handlleEdit = (e, value, id) => {\n    e.preventDefault();\n    db.collection(\"todos\").doc(id).set(\n      {\n        todo: value,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      },\n      { merge: true }\n    );\n  };\n\n  const handlleDelete = (id) => {\n    db.collection(\"todos\").doc(id).delete();\n  };\n  return (\n    <div className=\"todolist\">\n      <div className=\"input-todolist\">\n        <h2 style={{ marginTop: \"0.5rem\" }}>Aplikasi Todo List Firebase!</h2>\n\n        <form className=\"form-input\">\n          <TextField\n            id=\"todoinput\"\n            label=\"Todo\"\n            style={{ width: \"50%\" }}\n            placeholder=\"Todo List ...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          <Button\n            disabled={!input}\n            type=\"submit\"\n            onClick={inputData}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ margin: \"1rem\" }}\n          >\n            Add Todo\n          </Button>\n        </form>\n      </div>\n      <hr />\n      {/* list data dari fire base */}\n      <List style={{ width: \"80%\" }}>\n        {todos.map((todo) => (\n          <Listing\n            key={todo.id}\n            todo={todo}\n            handlleDelete={handlleDelete}\n            handlleEdit={handlleEdit}\n          />\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default Todo;\n","import Todo from \"./components/main-page/Todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}